{"version":3,"sources":["components/header/header.js","components/form/form.js","components/footer/footer.js","components/results/results.js","components/history/history.js","components/routes.js","App.js","index.js"],"names":["Header","to","ButtonOrder","children","rest","Spinner","src","alt","class","height","width","Main","props","handleClick","e","preventDefault","setState","isPlacingOrder","setTimeout","methodurl","state","method","url","handleUrl","target","value","handleMethod","firstSelect","handleBody","body","handleSubmit","a","item","localStorage","getItem","JSON","parse","push","setItem","stringify","requestOptions","headers","toggleLoading","fetch","then","response","json","data","superagent","get","console","log","historyData","historyHeaders","count","Count","handler","Object","keys","length","bofyJson","Results","onChange","this","type","disabled","onClick","name","checked","React","Component","Footer","id","className","loading","results","History","ShowDelails","document","getElementById","style","display","NewSearch","map","index","key","Routes","items1","item2","all","path","exact","render","App","handleForm","Fragment","rootElement","ReactDOM"],"mappings":"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","file":"static/js/main.9881ba57.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport './Header.scss';\nconst Header = () => {\n  return (\n    <header>\n      <nav>\n        <Link to=\"/home\" > Home </Link>\n        <Link to=\"history\" > History </Link>\n      </nav>\n      <h1>RESTy</h1>\n    </header>\n  );\n};\n\nexport default Header;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport './Main.scss';\nimport superagent from 'superagent';\nlet item =[];\nconst ButtonOrder = ({ children, ...rest }) => {\n  return <button {...rest}>{children}</button>;\n};\n  \nconst Spinner = () => (\n  <img src=\"https://media1.tenor.com/images/85d269dc9595a7bcf87fd0fa4039dd9f/tenor.gif?itemid=8647480\" alt=\"Hello\" class=\"zoom2\" height=\"30\" width = '30'/>\n);\n\n\n// Main \nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      method: 'GET',\n      url:'https://swapi.dev/api/people/',\n      body:{},\n      item:[],\n      bofyJson:{},\n      methodurl : 'GET https://swapi.dev/api/people/',\n      Count:0,\n      Results:[],\n      isPlacingOrder : false,\n      firstSelect :true,\n    };\n  }\n\n    handleClick = e => {\n      e.preventDefault();\n      this.setState(\n        {\n          isPlacingOrder: true,\n        },\n        () => {\n          setTimeout(() => {\n            let methodurl = `${this.state.method} ${this.state.url}`;\n            this.setState({methodurl}); // re-render \n            this.setState({\n              isPlacingOrder: false,\n            });\n          }, 1000);\n        },\n      );\n\n    }\n\n    handleUrl = e => {\n      let url = e.target.value;\n      this.setState({url}); // re-render \n    }\n\n    handleMethod = e => {       \n      let method = e.target.value;\n      this.setState({method:method,firstSelect:false}); // re-render \n    }\n    handleBody = e => {       \n      let body = e.target.value;\n      this.setState({body:body}); // re-render \n    }\n    handleSubmit = async e => {\n      // fetch data form API \n      e.preventDefault();\n      \n      let item = localStorage.getItem('item') || '[]';\n      item = JSON.parse(item);\n      item.push({method:this.state.method,url:this.state.url,body:this.state.body});\n      localStorage.setItem('item',JSON.stringify(item));\n      // localStorage.setItem('url',this.state.url);\n      // localStorage.setItem('method',this.state.method);\n      // localStorage.setItem('body',this.state.body);\n      const requestOptions = {\n        method: this.state.method,\n        headers: { 'Content-Type': 'application/json' },\n      };\n      if (this.state.method != 'GET'){\n        requestOptions.body = this.state.body;\n      }\n      this.props.toggleLoading();\n      let data =await fetch(this.state.url, requestOptions)\n        .then(response => response.json());\n      let headers = await superagent.get(this.state.url);\n      console.log(`raw.headers`,data.headers);\n      console.log(`headers`,headers);\n      console.log(data);\n      let historyData = localStorage.getItem('historyData') || '[]';\n      historyData = JSON.parse(historyData);\n      historyData.push(data);\n      localStorage.setItem('historyData',JSON.stringify(historyData));\n\n      let historyHeaders = localStorage.getItem('historyHeaders') || '[]';\n      historyHeaders = JSON.parse(historyHeaders);\n      historyHeaders.push(headers.headers);\n      localStorage.setItem('historyHeaders',JSON.stringify(historyHeaders));\n\n      // let headers=raw.headers;\n      if (data.count){\n        let Count = data.count;\n        this.props.handler(Count, data,headers.headers);\n\n      }\n      else\n      {\n        let Count=Object.keys(data).length;\n        this.props.handler(Count, data,headers.headers);\n\n      }\n      this.props.toggleLoading();\n    }\n\n\n    render() {\n      return (\n        <main>\n          <div>\n            <label>URL: <input onChange={this.handleUrl} value = {this.state.url}/></label>\n            <label>Body: <input onChange={this.handleBody} value = {this.state.body}/></label>\n            <ButtonOrder type=\"button\" disabled={this.state.isPlacingOrder} onClick={this.handleSubmit}>\n              {this.state.isPlacingOrder ? <Spinner /> : 'Go'}\n            </ButtonOrder>\n            <div class=\"checkRadioContainer\">\n              {this.state.firstSelect ?  \n                <label>\n                  <input type=\"radio\" name=\"radioGroup\" value=\"GET\" onChange={this.handleMethod}  checked = 'checked'/>\n                  <i class=\"fa fa-check fa-2x\"></i>\n                  <span>GET</span>\n                </label> :\n                <label>\n                  <input type=\"radio\" name=\"radioGroup\" value=\"GET\" onChange={this.handleMethod}/>\n                  <i class=\"fa fa-check fa-2x\"></i>\n                  <span>GET</span>\n                </label>\n              }\n                      \n              <label> \n                <input type=\"radio\" name=\"radioGroup\" value=\"POST\" onChange={this.handleMethod}/>\n                <i class=\"fa fa-check fa-2x\"></i>\n                <span>POST</span>\n              </label>\n              <label>\n                <input type=\"radio\" name=\"radioGroup\" value=\"PUT\" onChange={this.handleMethod}/>\n                <i class=\"fa fa-check fa-2x\"></i>\n                <span>PUT</span>\n              </label>\n              <label>\n                <input type=\"radio\" name=\"radioGroup\" value=\"DELETE\" onChange={this.handleMethod}/>\n                <i class=\"fa fa-check fa-2x\"></i>\n                <span>DELETE</span>\n              </label>\n            </div>\n            {/* <div>\n              <textarea id=\"textarea\" name=\"textarea\" rows=\"10\" cols=\"50\"value={this.state.methodurl}></textarea>\n            </div> */}\n          </div>\n        </main>\n      );\n    }\n}\n\nexport default Main;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport './Footer.scss';\nconst Footer = () => <footer><p>&copy;2020 Code Fellows</p></footer>;\nexport default Footer;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactJson from 'react-json-view';\nimport './results.scss';\nconst Results = (props) => {\n    \n  return (\n    <div id=\"textarea\">\n      <div>Count: {props.count}</div>\n      <img src=\"https://flevix.com/wp-content/uploads/2019/07/Curve-Loading.gif\" className={`loading-${props.loading}`} alt=\"thank you\"/>\n      {/* Render json without using react-json-view module  */}\n      {/* {\n        <div><pre>headers:{ JSON.stringify(props.headers, null, 2) }</pre></div>\n      }\n\n      {\n        <div><pre>body: { JSON.stringify(props.results, null, 2) }</pre></div>\n      } */}\n      {/* Render json using react-json-view module  */}\n      Header:{\n        <ReactJson src={props.headers} />\n      }\n\n      Results:{\n        <ReactJson src={props.results} />\n      }\n    </div>\n  );\n};\n\nexport default Results;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactJson from 'react-json-view';\nimport {Route} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\n// import Home from './home.js';\nimport App from './../../App.js';\nimport './history.scss';\n\nclass History extends React.Component {\n  ShowDelails = e => {  \n    e.preventDefault();\n    let item = document.getElementById(e.target.name) ;\n    if (item.style.display === 'block') {\n      console.log('none');\n      item.style.display = 'none';\n      e.target.value = 'Hide Delails' ;\n    } else {\n      console.log('show');\n      item.style.display = 'block';\n      e.target.value = 'Show Delails'; \n    }\n  }\n  NewSearch = e => {       \n\n  }\n  render() {\n    return (\n      <ul className=\"list\">\n        {console.log(this.props.children[0], 'child')}\n\n        {this.props.children[0].map((item, index) => (\n          <li key={index}>\n            {item.method+' '+item.url}\n            <button name={index} onClick ={this.ShowDelails}>Show Delails</button>\n            <button name={index} onClick ={this.NewSearch}>\n              New Search\n              {/* <Redirect\n                to={{\n                  pathname: '/',\n                  state: {url: item.url,method: item.method },\n                }}\n              /> */}\n            </button>\n            <div class=\"textarea\" id = {index} >\n              Header:{\n                <ReactJson src={this.props.children[1][index]} />\n              }\n\n              Results:{\n                <ReactJson src={this.props.children[2][index]} />\n              }\n            </div>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default History;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Route} from 'react-router-dom';\n// import Home from './home.js';\nimport History from './history/history.js';\nconst Routes = props => {\n\n  console.log('itemsitemsitemsitemsitemsitemsitems');\n  let items1 = localStorage.getItem('item');\n\n  // let item2 =items1.split(',');\n  let item2=JSON.parse(items1)||[];\n\n  let historyData = localStorage.getItem('historyData');\n  let historyHeaders = localStorage.getItem('historyHeaders');\n  historyData =JSON.parse(historyData) || [];\n  historyHeaders =JSON.parse(historyHeaders) || [];\n  let all = [item2,historyHeaders,historyData];\n  return (\n    <main>\n      <Route path=\"/\" exact>\n        {/* <Home /> */}\n      </Route> \n      <Route path=\"/history\" exact render={() => <History>{all}</History>} />\n    </main>\n  );\n};\n\n\nexport default Routes;","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport Header from './components/header/header';\nimport Main from './components/form/form';\nimport Footer from './components/footer/footer';\nimport Results from './components/results/results';\nimport Routes from './components/routes';\nimport { Link } from 'react-router-dom';\n\n\n//class App\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // key and value pairs\n      count: 0,\n      results: [],\n      headers:[],\n      item:[],\n      loading:false,\n    };\n  }\n  \n// Make a spinner\ntoggleLoading = () => {\n  console.log('this.state.loading: ',this.state.loading);\n  this.setState({ loading: !this.state.loading });\n}\n// method to be passed to form\nhandleForm = (count, results,headers,item) => {\n  this.setState({count, results,headers,item});\n  // {count: count , results:results}\n}\n\nrender() {\n  return (\n    // I will add Header, Main, Footer\n    <React.Fragment>\n      {/* <link >history</link> */}\n      <Header />\n      <Routes item={this.state.item}/>\n\n      {/* <Main /> */}\n      <Footer />\n      <Main handler={this.handleForm} toggleLoading={this.toggleLoading} />\n      <Results loading={this.state.loading} count={this.state.count} results={this.state.results} headers={this.state.headers} />\n    </React.Fragment>\n  );\n}\n}\n\nexport default App;\n\n","/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { config as reactParseConfig, setReactParseDispatch } from 'react-parse';\n\nimport App from './App.js';\n\nclass Main extends React.Component {\n  render() {\n    return(\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    );\n  }\n}\n\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}